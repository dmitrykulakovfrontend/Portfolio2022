@use "src/styles/variables" as *;
@use "src/styles/animations" as *;
@use "src/styles/mixins" as *;

.menu_language {
  position: fixed;
  bottom: 20px;
  right: 20px;
  display: flex;
  align-items: stretch;
  justify-content: stretch;
  border-radius: 20px;
  background-color: white;
  flex-direction: column;
  label {
    user-select: none;
    padding: 1rem;
    cursor: pointer;
    will-change: transform;
    transform: translateZ(0px);
    transition: transform 125ms ease-in-out, filter 125ms ease-in-out;
    color: black;
    font-family: $Raleway;
    mix-blend-mode: multiply;

    &:hover {
      transform: scale(1.15);
    }
  }

  input[type="radio"] {
    display: none;

    // static
    &#first ~ .blob {
      transform-origin: right center;
    }

    &#second ~ .blob {
      transform-origin: left center;
    }

    // animated
    &#first:checked {
      ~ .blob {
        background: cornflowerblue;
        animation-name: stretchyRevMobile;
        @include lgMinBreakPoint {
          animation-name: stretchyRev;
        }
      }
    }

    &#second:checked {
      ~ .blob {
        background-color: skyblue;
        animation-name: stretchyMobile;
        @include lgMinBreakPoint {
          animation-name: stretchy;
        }
      }
    }
  }

  .blob {
    top: 0;
    left: 0;
    width: 100%;
    height: 50%;
    position: absolute;
    z-index: -1;
    border-radius: 4rem;
    animation-duration: 0.5s;
    animation-direction: forwards;
    animation-iteration-count: 1;
    animation-fill-mode: forwards;
    transition: transform 150ms ease, background 150ms ease;

    &:before {
      display: block;
      content: "";
      position: absolute;
      top: 0;
      background-color: inherit;
      height: 100%;
      border-radius: 100%;
      transform: scale(1.15);
      transition: transform 150ms ease;
    }

    &:before {
      left: 0;
      animation-delay: 0.15s;
    }
    @include lgMinBreakPoint {
      width: 50%;
      height: 100%;
    }
  }
  @include lgMinBreakPoint {
    flex-direction: row;
  }
}

@keyframes stretchyMobile {
  0% {
    transform: translateY(0) scaleY(1);
  }
  50% {
    transform: translateY(0) scaleY(2);
  }
  100% {
    transform: translateY(100%) scaleY(1);
  }
}

@keyframes stretchyRevMobile {
  0% {
    transform: translateY(100%) scaleY(1);
  }
  50% {
    transform: translateY(0) scaleY(2);
  }
  100% {
    transform: translateY(0) scaleY(1);
  }
}

@keyframes stretchy {
  0% {
    transform: translateX(0) scaleX(1);
  }
  50% {
    transform: translateX(0) scaleX(2);
  }
  100% {
    transform: translateX(100%) scaleX(1);
  }
}

@keyframes stretchyRev {
  0% {
    transform: translateX(100%) scaleX(1);
  }
  50% {
    transform: translateX(0) scaleX(2);
  }
  100% {
    transform: translateX(0) scaleX(1);
  }
}
